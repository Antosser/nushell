spotdl
which nu
mkdir spotify
cd spotify
mkdir mel
cd mel
spotdl  C:\Users\Anton\.cargo\bin\nu.exe
cd music
cd spotify
spotdl https://open.spotify.com/album/35rmnJ6CHFLk7YZwAWxKmG?si=37df9f0d58e84e70
mkdir celeste
cd celeste\
cd music/spotify
mkdir hollowknight
cd hollowknight\
spotdl https://open.spotify.com/album/1ZfETfec0U02KrKNI8w3Gf
spotdl https://open.spotify.com/album/2M2Ae2SvZe3fmzUtlVOV5Z?si=3024ea8a29604532
cd ..
mkdir stickfight
cd stickfight\
cd ..
mkdir warriyo
cd warriyo\
spotdl https://open.spotify.com/album/5db1v8e3BJu4ymP3sCmcM8
cd ..
mkdir thefatrat
cd thefatrat\
spotdl https://open.spotify.com/artist/153gpNcKRhv5Cn30q375Mr
cd ..
mkdir noisestorm
cd noisestorm\
cd ..
mkdir portal
cd portal
cd music/spotify
mkdir bossfight
cd bossfight\
spotdl https://open.spotify.com/artist/3OKg7YbOIatODzkRIbLJR4
spotdl https://open.spotify.com/artist/2BuSNpxpMGJGiAAWJYJT2t
cd ..
mkdir erb
cd erb
cd ..
mkdir f777
cd f777\
cd music/spotify
spotdl https://open.spotify.com/playlist/2lK8ZwIX7suQQPVl2ePrsd
mkdir squarepercestion
rm squarepercestion\
mkdir squareperception
cd squareperception\
cd ..
mkdir oxxxymiron
cd oxxxymiron\
cd music/spotify
mkdir xtrullor
cd xtrullor\
spotdl https://open.spotify.com/album/3NJs73ZnPTH1qdfQ3TZ5TP?si=45b5610c4f4942ce
spotdl https://open.spotify.com/artist/74cJFrSQGYIXKkJZbKo8CG
cd ..
mkdir hl2
cd hl2\
cd ..
mkdir steventhedreamer
cd steventhedreamer\
spotdl https://open.spotify.com/artist/4Li9XzqHb3KHgM423sA3nX
spotdl https://open.spotify.com/album/2V0wi4SuioFjmpMu9u60bg?si=2a20e30e32d3473f
spotdl https://open.spotify.com/artist/1fILrc9B34DjHxSMkJmyBN
spotdl https://open.spotify.com/artist/1gCOYbJNUa1LBVO5rlx0jB
ping pornhub.com
cd d:/dev/rust/
cargo new sort-4
cd sort-4\
code .
cd target\
cd release\
sort-4
cd %temp%
cd $temp
$env.temp
cd $env.TEMP
cd $TEMP
rm * -r
explorer .
cd d:\dev\rust\ultimate-tic-tac-toe-bot\
code .
irust
cd d:/dev/rust
cargo new ibench
cd ibench\
code .
cd ..
rm ibench\ -r
cargo new ibench --libe
cargo new ibench --lib
cd ibench
code .
irust
ping google.com
ping pornhub.com
ping gv.at
cd d:\crawled\
set RUST_LOG 
$env.RUST_LOG=debug
RUST_LOG=debug
$env.RUST_LOG='debug'
$env.RUST_LOG = "debug"
web-crawler https://telegra.ph/Lorem-ipsum-dolor-sit-amet-consectetur-adipiscing-elit-sed-do-eiusmod-tempor-incididunt-ut-labore-et-dolore-magna-aliqua-Ut-enim-05-22-3 -d
tree telegra.ph\
tree telegra.ph\ -f
tree telegra.ph\ /f
rm telegra.ph\ -r
web-crawler -h
web-crawler https://telegra.ph/Lorem-ipsum-dolor-sit-amet-consectetur-adipiscing-elit-sed-do-eiusmod-tempor-incididunt-ut-labore-et-dolore-magna-aliqua-Ut-enim-05-22-3 -d -t 0
rm telegra.ph\ -r
web-crawler https://telegra.ph/Lorem-ipsum-dolor-sit-amet-consectetur-adipiscing-elit-sed-do-eiusmod-tempor-incididunt-ut-labore-et-dolore-magna-aliqua-Ut-enim-05-22-3 -d -t 0
cd telegra.ph\
npx http-server
cargo install http-server
http-server
http-server -v
http-server -V
http-server
http-server -h
http-server --help
npx http-server
http-server --help
http-server --username anton
http-server --password anton
mkdir hollowknight
cd hollowknight\
spotdl https://open.spotify.com/album/4XgGOMRY7H4hl6OQi5wb2Z?si=8785560c33d342b8
cd d:\clone\
git clone https://github.com/Antosser/mathlib
cd mathlib\
code .
cd ../..
cd clone
git clone https://github.com/dstark5/meetx
cd meetx
cd peerserver\
npx i
npm i
npm run start
ls
cd ..
code .
cd peerserver\
npm run start
code ..
npm run start
cd d:/dev/web
npm create astro@latest -- --template blog
ls
mkdir blog.antonaparin.com
cd blog.antonaparin.com\
npm init astro@latest -- --template blog
cd ..
rm blog.antonaparin.com\ -r
npm init astro@latest -- --template blog
npm create astro@latest -- --template blog
cd blog.antonaparin.com\
code .
cd ..
rm blog.antonaparin.com\ -r
ls
npm create astro@latest -- --template blog
cd antonaparin.com-v4\
code .
cd d:\dev\web\antonaparin-com-v3\
code .
npm run start
npm run start --host 0.0.0.0
npm run start -- --host
npm run start -- --host 0.0.0.0
cd d:\dev\web\antonaparin-com-v4
cd d:\dev\web\antonaparin.com-v4
cd dist
http-server
http-server -v
npx http-server
cargo install httpserve
cargo install httpserver
cargo install miniserve
miniserve
miniserve --auth anton:aparin
miniserve
miniserve -h
miniserve
code ..
npm run start
npm run build
cd dist
npx http-server
cd ..
npm run start
npm run build
tree dist /f
tree /f
npm run build
cd ..
cd ../..
cd rust\boggle-helper\
cargo run -r
explorer .
ls src
open src\main.rs
ls src
cargo run -r
cls
cargo run -r
code .
cargo check
cd ..\..\WEB\antonaparin.com-v4\
code .
npm run start
npm run build
npm run start
npm run build
npm run start
npm run star
npm run start
cls
npm run build
cd d:/dev/rust/
cargo new fourier
cd fourier\
code .
cd d 
cd d:/dev/rust
ls
ls | where name ~= 'dir'
ls | where name~='dir'
ls | where name ~= 'dir'
ls | where name =~ 'dir'
ls | where name =~ 'fol'
cd ..
cd web
cd antonaparin.com-v4\
code .
tree /f
tree src /f
cd d:/dev/rust
git clone https://github.com/Antosser/http-server
cd http-server\
code .
cargo test
cargo watch -r run
cargo watch -x run
cargo test
rg "-v"
rg '-v'
cd v
rg v
rg -- -v
rg -- -v
rg -- --v
rg verbose
rg -- -v
rg -- --v
rg verbose
rg Print
cargo run -- -h
cargo run -- --help
cd ../../..
cd dev\web\antonaparin.com-v4\
code .
cd ~
gpg
gpg --full-generate-key
gpg --list-secret-keys --keyid-format LONG
gpg --help
gpg --delete-keys
gpg --delete-keys 02AFCB9F109063BB
gpg --delete-secret-keys 02AFCB9F109063BB
gpg --list-secret-keys --keyid-format LONG
gpg --gen-revoke 7C5844D78AB6D631
gpg -v
gpg --version
gpg --send-keys anton@antonaparin.com
gpg --export --armor anton@antonaparin.com
gpg --list-secret-keys --keyid-format LONG
gpg --list-secret-keys
gpg --send-keys 8E03A809FF55145C3BD5B7EB7C5844D78AB6D631
gpg --send-keys 7C5844D78AB6D631
gpg --delete-secret-keys 7C5844D78AB6D631
gpg --full-generate-key
gpg --send-keys 448BCAACC340DDDE23B52EA5ABAA5BC877B9A5E8
gpg --version
gpg --send-keys 448BCAACC340DDDE23B52EA5ABAA5BC877B9A5E8 --keyserver hkp://keyserver.ubuntu.com:80
gpg --keyserver hkp://keyserver.ubuntu.com:80 --send-key 448BCAACC340DDDE23B52EA5ABAA5BC877B9A5E8
which gpg
gpg --version
erxit
exit
gpg --version
gpg --send-keys E870EE00B5D90537
gpg --list-secret-keys
gpg --send-keys 448BCAACC340DDDE23B52EA5ABAA5BC877B9A5E8
gpg --list-secret-keys --keyid-format LONG
gpg --send-keys ABAA5BC877B9A5E8
gpg --send-keys 624AEBC2EE391A5C
gpg --send-keys anton@antonaparin.com
gpg --version
gpg --send-keys anton@antonaparin.com
gpg --send-keys 624AEBC2EE391A5C
gpg --export --armor anton@antonaparin.com
gpg --export --armor --export-options export-minimal anton@antonaparin.com
gpg --list-secret-keys --keyid-format LONG
gpg --export --armor --export-options export-minimal ABAA5BC877B9A5E8
gpg --send-keys ABAA5BC877B9A5E8
git config --global user.signingkey ABAA5BC877B9A5E8
git config --global commit.gpgsign true
which gpg
git config --global gpg.program
git config --global gpg.program "C:\Program Files (x86)\GnuPG\bin\gpg.exe"
git config --global gpg.program "C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe"
tv
ev
eve
cd d:\dev\rust\http-server\
code .
cargo clippy --fix
cargo clippy
cargo clean
cargo clippy
gpg
gpg --edit-key key-id
gpg --edit-key anton@antonaparin.com
cargo clippy --fix
cd ..\..\web\antonaparin.com-v4\
code .
npm run build
scs
sc delete vgc
sc delete vgk
cd d:/dev/rust/rust-test
code .
cd d:/dev/rust/
ls
cd fourier
open src\main.rs
open numbers.txt
cargo run -r
python main.py
cargo run -r
target\release\rust-test.exe
python main.py
target\release\rust-test.exe
cargo build -r
target\release\rust-test.exe
time
timeit
python main.py
timeit target\release\rust-test.exe
timeit python main.py
open numbers.txt
open numbers.txt
timeit target\release\rust-test.exe
sleep 8
sleep --help
sleep 1sec
timeit sleep 1sec
passgen
which http-server
explorer C:\Users\Anton\.cargo\bin
trunk
rpgen
rpgen generate
randompass
rpgen
rfgen
rfgen --help
cargo uninstall rpgen
randompass
randompass --help
randompass -l 100
cd d:\dev\rust\http-server\
code .
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
cargo -v
cargo -V
rustup -V
rustc -v
rustc -V
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustc -V
rustup -V
cargo clippy
cargo chec
cargo check
cargo clippy
cargo clippy --fix
cls
cargo clippy --fix
cargo clippy
cargo clippy --fix --allow-dirty
cls
cargo clippy --fix --allow-dirty
cls
cargo clippy --fix --allow-dirty
cls
cargo clippy --fix --allow-dirty
cargo clippy
cargo clippy --help
cargo check
cls
cargo check
cargo run
gpg
cd d:\dev\rust\http-server\
cargo run -- -i
cargo run -- -h
cargo run -- --help
cargo check
cargo clippy
cargo fmt
cd d:\dev\rust\http-server\
cargo run -- --help
cargo run -r
cargo test
cargo test --test cors_get_request_to_root_responds_200
cargo test --test cors::cors_get_request_to_root_responds_200
cargo test --test cors
cargo test
cargo test >> test.txt
cargo test > test.txt
cargo test | save test.txt
open test.txt
notepad test.txt
cargo test
cls
cargo test
cls
cargo test
cd ..
rm rust-test\ -r
cargo new rust-test
cd rust-test\
code .
randompass
cd %PROGRAMFILES(X86)%\Microsoft\Edge\Application\xxx\Installer
cd `C:\Program Files (x86)\\Microsoft\\Edge\\Application\\114.0.1823.82\Installer\`
setup.exe --uninstall --system-level --verbose-logging --force-uninstall
lns
ls
setup --uninstall --system-level --verbose-logging --force-uninstall
setup --uninstall --force-uninstall --system-level
cd C:\Program Files (x86)
cd 'C:\Program Files (x86)'
rm Microsoft\ -r
rm --help
rm Microsoft\ -r --force
rm Microsoft\ -r -f
del
randompass -h
which http-server
(which randompass)[0]
( which randompass ) 
( which randompass ) [0]
( which randompass )[0]
which randompass | get 0
which randompass | get 0 | get path | cd
which randompass | get 0 | get path
cd (which randompass | get 0 | get path)
cd {which randompass | get 0 | get path}
cd (which randompass | get 0 | get path)
(which randompass | get 0 | get path)
path (which randompass | get 0 | get path)
cd (which randompass | get 0.path | path dirname)
ls
base64cli
base94cli
base94cli --help
ls
ls | sort-by size
base94cli 
base94cli -h
cd ~
ls
ls | sort-by size
base94cli encode .gitconfig .ginconfig.base94
base94cli encode .gitconfig .gitconfig.base94
open .gitconfig.base94
cd d:/dev/rust/
cargo new server-test
cd server-test\
code .
cd ..
rm server-test\ -r
cd d:\dev\rust\http-server\
code .
md5sum
cd d:/clone
git clone https://github.com/facebookresearch/llama/tree/main
git clone https://github.com/facebookresearch/llama
cd llama\
download.sh
./download.sh
open download.sh
ubuntu
cd \dev\rust\gicopy\
code .
cd ../..
git clean -nx
exit
nu
cd ..
ls
cd base94
code .
cargo bench
cargo test
cd ..
cargo new egui-test
egui-test\
cd ge
cd egui-test\
code .
strip
cd target\release\
ls
strip egui-test.exe
ls
strip egui-test.exe -s
ls
cd /dev/rust/gicopy
code .
ls
notepad Cargo.toml:hello
ls
notepad Cargo.toml
cargo run -r -- D:/DEV D:/LDEV
cd /dev
git repack -a -d -f --depth=250 --window=250
exit
nu
cd ..\random-file-generator\
git gc --aggressive --prune
ls
explorer .
cd ..
cd gicopy\
cargo run -r -- D:/DEV D:/LDEV -c
cls
cargo run -r -- D:/DEV D:/LDEV -c
cls
cargo run -r -- D:/DEV D:/LDEV -c
cd d:\dev\MOBILE\myapp\
ls
notepad .gitignore
cd d:/dev/rust/gicopy
code .
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
explorer \dev\mobile\birth_date_analyzer\
cls
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
cd :\DEV\RUST\gicop
cd d:\DEV\RUST\gicop
cd d:\DEV\RUST\gicopy
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
cd d:\DEV\RUST\gicopy
rm D:/LDEV -r
cargo run -r -- D:/DEV D:/LDEV -c
cd d:\DEV\RUST\gicopy
rm --help
rm D:/LDEV -r -f
cargo run -r -- D:/DEV D:/LDEV -c
cd d:\DEV\RUST\gicopy
git repack
git repack --help
cd /
cd DEV
cd D:/dev
rm *.zip
rm --help
find
find *.zip
find --help
rg
rg --help
ls --help
ls
ls -s
ls -r
ls **
m
us 
ls ** | rg .zip
rm "D:\DEV\GO\go-prank-virus\out" -r
rm '"D:\DEV\GO\go-prank-virus\out"' -r
ls ** | rg .zip
ls ** | rg \.zip
ls --help
ls -f ** | rg \.zip | rm -v
ls -f ** | rg \.zip | each { rm $in -v }
ls ** -f
cd rust\rust-test\
code .
cd ..
rm rust-test\ -r
cargo new rust-test
cd rust-test\
code .
cd ..
cargo new actix-test
cd actix-test\
code .
cargo install drill
openssl
which openssl
set $env.OPENSSL_DIR = (which openssl)
$env.OPENSSL_DIR = (which openssl)
$env.OPENSSL_DIR
$env.OPENSSL_DIR = (which openssl | get path)
$env.OPENSSL_DIR
$env.OPENSSL_DIR = (which openssl | get path.0)
$env.OPENSSL_DIR
cargo install drill
$env.OPENSSL_DIR
ls C:\Program Files\OpenSSL-Win64\bin
ls "C:\Program Files\OpenSSL-Win64\bin"
ls r"C:\Program Files\OpenSSL-Win64\bin"
ls "C:\\Program Files\\OpenSSL-Win64\\bin"
cd d:\dev\rust\http-server\
code .
cd ..
gh
cd d:/dev/rust
gh repo clone Antosser/prettysize-rs
gh auth login
gh repo clone Antosser/prettysize-rs
gh
cd prettysize-rs\
code .
cargo add serde
cargo check
cargo clippy
cargo clippy --fix
cargo clippy
cls
cargo clippy
cls
cargo clippy
cargo clippy --fix --allow-dirty
cd ..
cd http-server\
code .
cargo clippy
cargo fmt
cargo test
cargo clippy
cd ..\prettysize-rs\
code .
cargo clippy
cargo fmt
cargo chick
cargo check
cargo test
cargo tset
cargo test
cargo run --example blog
cargo run --example readme
cd ../..
carg clean all
cargo clean call
cargo clean all
cargo clean
cargo clean --help
cargo install cargo-clean-all
cargo clean-all
cd rust
cd http-server\
code .
cd ../..
cargo clean-all
cd d:\dev\rust\http-server\
code .
explorer 
ls
explorer .
wmic baseboard get product,Manufacturer
cd \\?\
cd \
cd \\?\c
cd \\?\C
cd d:/
rm iso -r
rm iso -r -f
rm iso -rf
rm iso -rg
rm iso -r
rm iso -rf
cd D:\Games\Steam\steamapps\common\HalfLife2RTX
hl2 --game hl2
taskkill /im hl2.exe /f
ubuntu
cd C:\Users\Anton\source\repos
git init
echo hello
sc delete vgc
sc delete vgk
cd d:/clone
git clone https://github.com/iced-rs/iced
cd iced
cargo run --example tour -r
cargo run --package tour -r
cd ..
cd /dev/rust
cargo new urlspam
cd urlspam\
code .
cd d:/dev/rust
gh repo clone Antosser/rust_is_even
cd rust_is_even\
code .
cargo test
cls
cargo test
cargo clippy
cargo fmt
cargo clippy --fix
cd d:/dev/rust/rust-test
code .
cd ..\rust_is_even\
cargo test
cargo test -r
code .
cargo clippy
cargo check
cargo build
cargo check
cargo clippy
cargo clippy --fix
cargo fmt
cd d:\dev\rust\http-server\
code .
cargo test
cls
cargo test
cls
cargo test
cargo test --lib
cargo test
cargo test --help
cd d:/dev/rust/rust-test
code .
irust
cargo run
cls
cargo run
cls
cargo run
cargo run -2
cargo run -r
cargo run a
cargo run
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
irust
cargo run -r
cargo run
cargo run -r
cargo run
cargo run -r
cd d:/dev/rust/rust-test
cargo run -r
cd ..\http-server\
code .
cargo run -- -h
cargo run -- --help
cargo run -- -h
cd C:\Users\Anton\AppData\Local\mobslide
mobslide
rustup
rustup nightly
rustup +nightly
rustup check
rustup update
rustup toolchain
rustup toolchain install nightly
rustc -V
rustup run nightly rustc -V
rustup default nightly
rustc -V
rustup
cargo -V
cd D:\dev\rust\http-server\
rm target -r
cargo build -r
rm target -r
cargo build -r -Z threads=16
cargo build -r 
$env.RUSTFLAGS = '-Z threads=16'
cargo build -r 
cargo fmt
cargo clippy
cargo clippy --fix
cargo clippy
cargo clippy --help
cargo clippy --no-deps
cargo check
cargo check --help
cargo clippy -v
cargo clippy -vv
cargo clippy -r
cargo clippy --release
cargo clean
cargo clippy
cargo clippy --fix
cargo clippy --fix --allow-dirty
cd ...
cd rust
rm rust-test\ -r
cargo new rust-test
cd rust-test
code .
cargo clippy
cargo fmt
cd ..\http-server\
cargo fmt
cargo clippy
cargo fmt --help
cargo fmt --check
cargo fmt
cd d:/dev/rust/http-server
cargo uninstall http-server
cargo install http-server
http-server
cd d:/dev/rust
rm rust-test\ -r
cargo new rust-test
cd rust-test
code .
cargo run
cargo run -r
cargo install --heulp
cargo install --help
cargo install create-tauri-app
$env.RUSTFLAGS = '-Z threads=16'
cd ..
cargo create-tauri-app
cd music-creator
npm install
npm run tauri debv
npm run tauri dev
cd d:/dev/rust
rm rust-test\ -r
cargo new rust-test
cd rust-test
code .
cargo run -r
explorer 
explorer .
cargo run -r
cargo install libc
cargo add libc
cargo run -r
cd ..
ls
rg cloth
cd circles\
cargo run -r
code .
cargo run -r
cd ..
cp circles circles-femtovg
cp circles circles-femtovg -r
cd circles-femtovg\
code .
cd ..
rm circles-femtovg\ -r
cd circles\
code .
cargo install fd-find
fd --help
cd d:/dev
fd circles
fd a
fd README.md
cd rust
cargo new binary
cd binary
code .
cargo run -r
cls
cargo run -r
cls
cargo run -r
cargo run -r | save sth
explorer .
cargo run -r | save sth
cls
cargo run -r | save sth
cargo run -r
cargo clippy
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
gpg
gpg --help
gpg --list-secret-keys --keyid-format LONG
cd downloads
rg --help
rg -f what.txt bat
ls
cd d:/downloads
ls
rg -f what.txt bat
rg bat what.txt
open what.txt
cd d:/dev/rust
cargo new advent-of-code
rm advent-of-code\ -r
cargo new advent-of-code-2023
cd advent-of-code-2023\
code .
rm * -r
sl
ls
cd ..
rm advent-of-code-2023\ -r
mkdir advent-of-code-2023
cd advent-of-code-2023\
cargo new 1-1
cargo new aoc1-1
cd aoc1-1\
code .
cargo run -r
cargo clippy
cargo run -r
cd ..
cp aoc1-1 aoc1-2
cp aoc1-1 aoc1-2 -2r
cp aoc1-1 aoc1-2 -r
cd aoc1-2\
code .
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cd ..\aoc1-1\
code .
cd ..
ls
ls advent-of-code-2023\
rm advent-of-code-2023\ -r
git inti
git init
git add .
cd aoc1-1\
ls
ls -a
rm .git -r
cd ..
cd aoc1-2\
rm .git -r
code .
cd ..
gpg --output private.pgp --armor --export-secret-key username@email
gpg --output private.pgp --armor --export-secret-key anton@antonaparin.com
open private.pgp
explorer .
wpeutil
cd d:\dev\rust\advent-of-code-2023\
ls
cargo new aoc2-1
cd aoc2-1\
code .
cargo add regex
cargo add lazy_static
cargo run -r
cargo run -r
cls
cargo run -r
clsm
cls
clsm
cls
cargo run -r
cls
cargo run -r
rustc --explain E0308
cargo run -r
target\release\aoc2-1.exe
explorer target\release\
cls
cargo run -r
cd ..
cp aoc2-1\ aoc2-2
cp aoc2-1\ aoc2-2 -r
cd aoc2-2\
code .
carg clean
cargo clean
cargo run -r
rm .git -r
ls
cd ..\aoc2-1\
rm .git -r
ls
ls -1
ls -A
ls -a
ls
cd ..
cd aoc1-1\
ls
cp .gitignore ..\aoc2-1\
cp .gitignore ..\aoc2-2/
open .gitignore
cd ..
tree .
tree . /f
explorer .
cargo new aoc3-1
cd aoc3-1\
ls
code .
cargo run -r
cls
cargo run -r
cargo check
cargo run -r
ls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
k
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
exit
nu
cd d:\dev\rust\advent-of-code-2023\
ls
cargo new aoc4-1
cd aoc4-1\
code .
cargo run -r
cd ../aoc3-1
open src\main.rs
cd ..\aoc2-2\
open src\main.rs
exit
nu
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cd ..
cp aoc4-1\ aoc4-2
cp aoc4-1\ aoc4-2 -r
cd aoc4-2\
code .
cargo clean
cargo run -r
cd ..\aoc4-1\
code .
cd ..\aoc4-2\o
cd ..\aoc4-2\
code .
cd..
cd ../aoc3-1
ls
ls ..
code .
cargo run -r
code .
cargo add tap
cargo run -r
cls
cargo run -r
fd
which fd
fd main.rs
fd --help
cd d:/dev/
cd rust
fd main.rs
fd lib.rs
fd (main|lib).rs
fd "(main|lib).rs"
fd "(main|lib.rs"
cd /clone
gh repo clone feross/TheAnnoyingSite.com
cd TheAnnoyingSite.com\
explorer
explorer .
cd \dev\rust\advent-of-code-2023\
cargo new aoc5-1
cd aoc5-1\
code .
cargo run -r
cargo check
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
time
tm
ti
timeit target\release\aoc5-1.exe
cd ..
cp aoc5-1 aoc5-2 -r
cd aoc5-2\
code .
cargo clean
cargo add itertools
cls
cargo run -r
cls
cargo run -r
cargo add rayon
cargo rm rayon
cargo rm rayono
cargo rm rayon
cargo run -r
ls >.
ls ..
irust
cd d:\dev\rust\advent-of-code-2023\
cargo new aoc6-1
cd 6-1
cd aoc6-1\
code .
cargo add re
cargo add regex
cargo check
cargo run -r
cargo check
cls
cargo check
cargo run -r
gpg
gpg --help
gpg --sigh abc
gpg --sign abc
gpg-connect-agent.exe 
gpg --sign abc
cd d:/dev/rust
cd advent-of-code-2023\
mkdir aoc6-1
cd aoc6-1\
ls
cd ..
mkdir aoc6-2
cd aoc6-2\
code README.md
cd ..
cargo new aoc7-1
cd *7*
cd aoc7-1\
code .
cargo add regex
cargo add itertools
cargo install kondo
rustc -V
echo $env.RUSTFLAGS
cd /dev
kondo
explorer .
irust
cd rust
cd advent-of-code-2023\aoc7-1\
cargo run -r
cls
cargo run -r
irust
cls
cargo run -r
cd d:\dev\rust\advent-of-code-2023\
cd aoc10-1\
code .
ffmpeg -i 20231216_021830.mp4 -crf 30 c-20231216_021830.mp4
ffmpeg -i 20231216_021830.mp4 -crf 30 c-20231216_021830.mp4 -c:v h264_nvenc
ffmpeg -i 20231216_021830.mp4 -crf 30 c-20231216_021830.mp4 --nvenc
ffmpeg -i 20231216_021830.mp4 -crf 30 c-20231216_021830.mp4 --enable-nvenc
ffmpeg -i 20231216_021830.mp4 -crf 30 c-20231216_021830.mp4 -c:v h264_nvenc
ffmpeg -i 20231216_021830.mp4 -crf 30 c-20231216_021830.mp4 -c:v h264_nvenc -hwaccel cuda
ffmpeg -i 20231216_021830.mp4 -crf 30 -c:v h264_nvenc c-20231216_021830.mp4
ffmpeg -i 20231216_021830.mp -crf 30 -c:v h264_nvenc c-20231216_021830.mp4
ffmpeg -i 20231216_020347.mp4 -crf 30 -c:v h264_nvenc c-20231216_020347.mp4.mp4
ffmpeg -i 20231216_013500.mp4 -crf 30 -c:v h264_nvenc c-20231216_013500.mp4
ping pornhub.com
ping sex.com
cargo install tinyurl
tinyurl https://antonaparin.com
ping tinyurl.com
ping api.tinyurl.com
tinyurl https://antonaparin.com
tinyurl https://antonaparin.com/index.html
cd d:/dev/rust
cargo new allshort
cd allshort\
code .
cargo run -r
cd d:\dev\rust\allshort\
cargo run -r
cls
cargo run -r
cls
cargo run -r
cd d:\dev\rust\allshort\
cargo run -r
cls
cargo run -r
cls
cargo run -r
cd d:\dev\rust\allshort\
cargo run -r
cjls
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
cls
cargo run -r
wsl --update
wsl
ollama run dolphin-mixtral:latest
ollama serve
cd d:/dev/rust
cargo new pi-approximation
cd pi-approximation\
code .
cargo run 
cargo run -r
cargo add nub
cargo add num
cls
cargo add num
cargo run -r
cd d:/dev/rust/joo
cd d:\dev\rust\ddns-updater\
code .
rustup default stable
randompass
cd d:/dev/rust/rust-test
code .
cargo rm libc
cargo add  tap
cargo run
cargo run -r
cargo run
cd ..
ls
open allshort\src\main.rs
mv allshort\ shortenall
ls shortenall\
math log 1
1 | math log
1 | math log 10
1000000000000000000000000000 | math log 10
1000000000000000000000000000 | math log 100
1000000000000000000000000000 | math log 10
1000000000000000000000000000 | math log 1
1000000000000000000000000000 | math log 0
1000000000000000000000000000 | math log 0.1
1000000000000000000000000000 | math log -10
1000000000000000000000000000 | math log 10
1000000000000000000000000000 | math log 9
mv shortenall\ allshort
cd allshort\
code .
cargo run
cargo check
cargo run -r
cd d:/dev/rust/working-tlds
cargo new working-tlds
cd working-tlds\
code .
cargo run
cargo run -r
cls
cargo run -r
cls
cargo run -r
ping google.com
cargo run -r
cd d:/dev/rust/working-tlds
cd d:/dev/rust/
find tld
fd tld
fd
cls
cd ..
fd tld
cd ~
mv working-tlds\ d:\dev\RUST\working-tlds
mv working-tlds d:\dev\RUST\working-tlds
mv working-tlds d:\dev\RUST\working-tlds -f
mv working-tlds d:\dev\RUST\working-tlds 
vp working-tlds d:\dev\RUST\working-tlds 
cp working-tlds d:\dev\RUST\working-tlds 
cp working-tlds d:\dev\RUST\working-tlds -r
rm working-tlds\
rm working-tlds\ -r
cd d:\DEV\RUST\working-tlds\
code .
cargo fmt
cargo clippy --fix --allow-dirty
cargo run -r
cd ..
cd http-server\
gh pr checkout 407
rh repo set-default
gh repo set-default
gh pr checkout 407
code .
cargo clippy
cargo clippy -- -D warnings
cargo fmt
cargo clippy --fix
ubuntu
rustup update
cargo clippy
cargo clippy --fix
cargo clippy
cargo fmt
cd ..
cd working-tlds\
code .
cargo add hickory_resolver
cargo fmt
cargo clippy --fix --allow-dirty
cls
cargo run -r
clt
cls
clt
cargo run -r
clt
cls
cargo run -r
nmap
[("AI", "209.59.119.34"), ("ARAB", "127.0.53.53"), ("CM", "195.24.205.60"), ("MUSIC", "127.0.53.53"), ("TK", "217.119.57.22"), ("UZ", "91.212.89.8"), ("VA", "2a01:b8:0:1:212:77:0:2"), ("WS", "64.70.19.33"), ("XN--L1ACC", "180.149.98.234"), ("XN--MXTQ1M", "127.0.53.53"), ("XN--NGBRX", "127.0.53.53")]
'[("AI", "209.59.119.34"), ("ARAB", "127.0.53.53"), ("CM", "195.24.205.60"), ("MUSIC", "127.0.53.53"), ("TK", "217.119.57.22"), ("UZ", "91.212.89.8"), ("VA", "2a01:b8:0:1:212:77:0:2"), ("WS", "64.70.19.33"), ("XN--L1ACC", "180.149.98.234"), ("XN--MXTQ1M", "127.0.53.53"), ("XN--NGBRX", "127.0.53.53")]' | json
'[("AI", "209.59.119.34"), ("ARAB", "127.0.53.53"), ("CM", "195.24.205.60"), ("MUSIC", "127.0.53.53"), ("TK", "217.119.57.22"), ("UZ", "91.212.89.8"), ("VA", "2a01:b8:0:1:212:77:0:2"), ("WS", "64.70.19.33"), ("XN--L1ACC", "180.149.98.234"), ("XN--MXTQ1M", "127.0.53.53"), ("XN--NGBRX", "127.0.53.53")]' | to json
'[("AI", "209.59.119.34"), ("ARAB", "127.0.53.53"), ("CM", "195.24.205.60"), ("MUSIC", "127.0.53.53"), ("TK", "217.119.57.22"), ("UZ", "91.212.89.8"), ("VA", "2a01:b8:0:1:212:77:0:2"), ("WS", "64.70.19.33"), ("XN--L1ACC", "180.149.98.234"), ("XN--MXTQ1M", "127.0.53.53"), ("XN--NGBRX", "127.0.53.53")]' | from json
'[("AI", "209.59.119.34"), ("ARAB", "127.0.53.53"), ("CM", "195.24.205.60"), ("MUSIC", "127.0.53.53"), ("TK", "217.119.57.22"), ("UZ", "91.212.89.8"), ("VA", "2a01:b8:0:1:212:77:0:2"), ("WS", "64.70.19.33"), ("XN--L1ACC", "180.149.98.234"), ("XN--MXTQ1M", "127.0.53.53"), ("XN--NGBRX", "127.0.53.53")]' | from nuon 
cd ..
mv working-tlds working-tld-sites
cd working-tld-sites\
ls
clip
cd
cd D:/DEV/RUST/working-tld-sites
wd
code .
cd d:\dev\rust\rust-test\
code .
explorer .
cargo build -r
cargo rustc -r -- -C prefer-dynamic
cd d:/clone
git clone https://github.com/rust-lang/rust
cd rust
cargo build -r
rustup w
rustup override set nightly
cargo build -r
python x.py
python x.py test
randompass
cd d:/dev/rust
cd water-simulation\
explorer .
cargo run -r
cargo run -r img.png
cargo run -r examples/giant-snail.png
code .
cargo run -r examples/giant-snail.png
cargo run -r -- --help
timeit cargo run -r -- examples/giant-snail.png -f 600
explorer .
rg
rg --help
ls
rg ".unwrap("
rg ".unwrap\("
rg ".unwrap\\("
rg ".unwrap"
rg "\.expect\\("
rg "\.expect\("
rg ".unwrap("
rg ".unwrap\("
rg ".unwrap\\("
rg ".expect\\("
rg "\.expect\\("
rg "\\.expect\\("
cls
cargo run -r
clt
cls
rg "\\.expect\\("
rg "\\.unwrap\\("
cargo clippy
cargo fmt
cargo run -r
cargo run -r -- examples\snail.png
cargo run -r -- examples\snail.png -f 150
def px [n=0] {<\n>  let l = $in<\n>  if $n == 0 { return false } else {<\n>    $l | px ($n - 1)<\n>  }<\n>}
px()
call px
sudo
cargo upgrade
cargo update
cargo install cargo-update
cargo install-update -a
'{"version": 1, "uid": 1113869408211332572, "layout": [[["KC_TAB", "KC_Q", "KC_W", "KC_E", "KC_R", "KC_T"], ["KC_LGUI", "KC_A", "KC_S", "KC_D", "KC_F", "KC_G"], ["KC_LCTRL", "KC_Z", "KC_X", "KC_C", "KC_V", "KC_B"], ["KC_RALT", "KC_SPACE", "KC_LSHIFT", -1, -1, -1], ["KC_Y", "KC_U", "KC_I", "KC_O", "KC_P", "KC_MNXT"], ["KC_H", "KC_J", "KC_K", "KC_L", "KC_SCOLON", "KC_MPRV"], ["KC_N", "KC_M", "KC_COMMA", "KC_DOT", "KC_SLASH", "KC_MPLY"], ["MO(1)", "KC_ENTER", "KC_BSPACE", -1, -1, -1]], [["KC_TAB", "KC_NO", "KC_GRAVE", "KC_QUOTE", "KC_MINUS", "KC_EQUAL"], ["KC_LGUI", "KC_1", "KC_2", "KC_3", "KC_4", "KC_5"], ["KC_LCTRL", "KC_NO", "KC_NO", "KC_NO", "KC_LEFT", "KC_DOWN"], ["KC_LALT", "MO(2)", "KC_LSHIFT", -1, -1, -1], ["KC_ESCAPE", "KC_LBRACKET", "KC_RBRACKET", "KC_BSLASH", "KC_NO", "KC_NO"], ["KC_6", "KC_7", "KC_8", "KC_9", "KC_0", "KC_NO"], ["KC_UP", "KC_RIGHT", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_DELETE", -1, -1, -1]], [["KC_TAB", "KC_F1", "KC_F2", "KC_F3", "KC_F4", "KC_F5"], ["KC_LGUI", "KC_F6", "KC_F7", "KC_F8", "KC_F9", "KC_F10"], ["KC_LCTRL", "KC_F11", "KC_F12", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_NO", -1, -1, -1], ["KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_NO", -1, -1, -1]], [["RESET", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["RGB_TOG", "RGB_HUI", "RGB_SAI", "RGB_VAI", "KC_NO", "KC_NO"], ["RGB_MOD", "RGB_HUD", "RGB_SAD", "RGB_VAD", "KC_NO", "KC_NO"], ["KC_LGUI", "KC_TRNS", "KC_SPACE", -1, -1, -1], ["KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO"], ["KC_ENTER", "KC_TRNS", "KC_RALT", -1, -1, -1]], [["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1]], [["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1]], [["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1]], [["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1]], [["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1]], [["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS", "KC_TRNS"], ["KC_TRNS", "KC_TRNS", "KC_TRNS", -1, -1, -1]]], "encoder_layout": [[], [], [], [], [], [], [], [], [], []], "layout_options": -1, "macro": [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], "vial_protocol": 5, "via_protocol": 9, "tap_dancecombokey_override": [{"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}, {"trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535, "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7}], "settings": {"1": 0, "2": 50, "3": 0, "4": 175, "5": 5, "6": 5000, "7": 200, "8": 0, "9": 10, "10": 20, "11": 8, "12": 10, "13": 30, "14": 10, "15": 80, "16": 8, "17": 40, "18": 0, "19": 80, "20": 5, "21": 0}}' | from json | to json
ssh anton@10.0.0.101
notepad C:\\Users\\Anton/.ssh/known_hosts
randompass
ping mc.antonaparin.com
cd d:\clone\
git clone https://github.com/quasar098/limbos32
cd limbos32\
rg system
rg deleting
rg the
rg Deleting
rg os.
rg os\\.
rg os
rg "system\\("
python main.py
pip install -r requirements.txt
python main.py
gh pr checkout 23
python main.py
ssh anton@10.0.0.101
cd d:/clone
git clone https://github.com/RedBird96/education_calculator
cd education_calculator\
code .
cargo clippy --fix
cargo clippy --fix --allow-dirty
ssh anton@10.0.0.101
randompass
randompass | clip
ssh anton@10.0.0.101
ssh anton@10.0.0.101
whoami
ssh anton@10.0.0.101
cd C:\Users\Anton\torrent\gta v source code\GTAVSP\GTAV Source\src
cd 'C:\Users\Anton\torrent\gta v source code\GTAVSP\GTAV Source\src'
rg fuck
rg se
rg sex
rg [^A-Za-z]sex
rg '[^A-Za-z]sex'
clear
rg '[^A-Za-z]sex'
clear
rg 8==D
rg 8=*D
rg 8=+D
rg penis
cd ../..
rg penis
open GTAV Source\tools_ng\script\util\BuildDept\CS_SensitiveKeywordSearch\results\assets_ng_gametext_content.txt
open 'GTAV Source\tools_ng\script\util\BuildDept\CS_SensitiveKeywordSearch\results\assets_ng_gametext_content.txt'
wegt
wget
cd d:/dev/python
mkdir gh-followers
cd gh-followers\
code .
python fetch_usernames.py
python fetch_usernames2.py
python fetch_usernames.py
clear
python fetch_usernames.py
ssh anton@10.0.0.101
cd ~
cd torrent\
cd `gta v source code\`
cd GTAVSP\
ls
cd `GTAV Source\`
rg fuck
rg '//*fuck'
rg '(//|#)*fuck'
clear
rg '(//|#)*fuck'
python sort.py
clst
clear
python sort.py
cd d:/dev/rust/
cargo new bhop
cd bhop
code .
cd d:/dev/rust
cargo new bhop-visualization
cd bhop\
cd ..
cd bhop-visualization\
code .
cargo install -f cargo-binutils
rustup component add llvm-tools-preview
cargo run
explorer.
explorer .
cargo run
cd ../bhop
cargo run -r
cargo install .
cargo install --path .
bhs
bhs art
open src\main.rs
nvim
nvim src\main.rs
cargo install --path .
Injector
bhs
ssh anton@10.0.0.101
cargo run
gpg-agent
cargo run
cargo build 2
cargo build -r
cd d:\dev\rust\rust-test\
code .
cargo run
cargo run -r
cargo run
cd ..
cargo new bevy-grid --lib
rm bevy-grid\ -r
cargo new bevy-grid
cd bevy-grid\
code .
open ..\bhop-visualization\Cargo.toml
cat
notepad ..\bhop-visualization\Cargo.toml
ssh anton@10.0.0.101
whoami
cd d:/dev/rust/bhop
cd ~
bhs
ssh anton@10.0.0.101
bhs
ssh anton@10.0.0.101
bhs
cd d:\dev\rust\working-tld-sites\
cargo run -r
ssh anton@10.0.0.101
sc delete vgc
sc delete vgk
ssh anton@10.0.0.101
cargo install --git https://github.com/typst/typst typst-cli
typst
which typst
du C:\Users\Anton\.cargo\bin\typst.exe
du
explorer C:\Users\Anton\.cargo\bin\
typst
cd d:/dev/
mkdir TYPST
cd TYPST
mkdir test
cd test
code .
typst compile
typst compile .
typst compile main.typ
rd
cmd
cd d:/dev/rust
git clone https://github.com/wooorm/levenshtein-rs
rm levenshtein-rs\ -r
cd rust-test\
code 
code  .
cargo run
"hello world" | cargo run
echo "hello world" | cargo run
open
wd
cd
cd d:/dev/rust/rust-test
spotdl
cd d:\Music\
spotdl https://open.spotify.com/track/78LFArDoeDWivH5o2eqr7I?si=2e0728c16f684260
"hello world" | cargo run
cd d:/dev/rust/rust-test
"hello world" | cargo run
cargo run
"hello world" | echo
"hello world" | echo 1
"hello world" | echo a
"hello world" | mpg
"hello world" | randompass
"hello world" | rg
"hello world" | rg .
bhs
cd d:/dev/rust/rust-test
cargo run
"hello" | cargo run
ls | cargo run
ls
ls | rg \\.
ls | rg \.
ls | rg "\."
ls | rg "\|."
ls | rg "\\."
ps
ps --help
ps -l
ps | into json
ps | to json
ps | to toml
ps | to json
{ps}
3..
{processes: do{ps}}
ls | table
table
{processes: (ps)}
{processes: (ps)} | to toml
{processes: (ps)} | to xml
{processes: (ps)} | to csv 
{processes: (ps)} | to md
{processes: (ps)} | to nuon 
{processes: (ps)} | to yaml 
{processes: (ps)} | to toml
clear
{processes: (ps)} | to toml
{processes: (ps)} | to toml | save processes
{processes: (ps)} | to toml | save processes.txt
{processes: (ps)} | to toml | save processes.toml
rm processes processes.txt
ls
explorer .
ls
echo (ls)
cd d:/dev/rust
cd water-simulation\
explorer .
cd ~
cargo fetch
cargo install arti
choco install sqlite
sudo
su
choco install sqlite
cargo install arti
ssh anton@10.0.0.101
pwd
ssh anton@10.0.0.101
cargo install just
cd d:/dev/rust
cargo new speedtest
cd speedtest\
code .
cargo add clap
cargo add clap --features derive
cargo add tap
cargo add tracing
cargo run 
cargo run -- --help
irsut
cd d:\dev\rust\speedtest\
car
cargo run -- --help
cargo add anyhow
cargo add color_eyre
cargo add anyhow
cargo run -- --help
cargo run -- serve
cargo run -- serve 1234
cargo run -- serve -p 1234
cargo add tracing_subscriber
cargo run -- serve -p 1234
cargo run -- --help
cargo add rand
cargo run -- test 10.0.0.100:1234
cargo fmt
cargo clippy --fix --allow-dirty
cargo run -- test 10.0.0.100:1234
python
cargo add humansize
cargo run -- test 10.0.0.100:1234
cd d:\dev\rust\speedtest\
cargo run -- test 10.0.0.100:1234
cargo run -- serve 10.0.0.100:1234
cargo watch -r "run -- serve 10.0.0.100:1234"
cargo watch -r "run -- test 10.0.0.100:1234"
cargo watch -x "run -- test 10.0.0.100:1234"
cargo watch -x "run -- serve 10.0.0.100:1234"
cargo run -r -- test 10.0.0.12
cargo run -r -- test 10.0.0.100:1234
cargo run -r -- serve 10.0.0.100:1234
cargo run -r -- test 10.0.0.100:1234
cargo run -r -- serve 10.0.0.100:1234
cargo run -r -- test 10.0.0.100:1234
cargo run -r -- serve 10.0.0.100:1234
cargo add itertools
cargo run -r -- test 10.0.0.100:1234
cargo run -r -- --help
cargo run -r -- help serve
cargo run -r -- help 
cargo run -r -- help test
cargo run -r -- test 10.0.0.100:1234 -l 1_000_000_000
cargo run -r -- test 10.0.0.100:1234 -l 1000000000
cargo clippy --fix --allow-dirty
cargo fmt
cargo clippy --fix --allow-dirty
cargo run -r -- serve 10.0.0.100:1234
cargo run -r -- test 10.0.0.100:1234
cargo run -r -- test 10.0.0.100:1234 -l 1000000000
cargo run -r -- serve 10.0.0.100:1234
cargo run -r -- test 10.0.0.100:1234 -l 10
cargo run -r -- test 10.0.0.100:1234 -l 100
cargo run -r -- test 10.0.0.100:1234 -l 10000
cargo install --path .
speedtest
speedtest help test
speedtest help serve
car
cargo install --path .
speedtest help
cargo install --path .
speedtest help
speedtest help serve
speedtest help test
du
du target\release\speedtest.exe
du target\release\
cargo publish
cargo install --path .
speedtest serve
speedtest serve 0.0.0.0:1234
cd ~
speedtest test 127.0.0.1:1234 -l 100
speedtest serve 0.0.0.0:1234
speedtest test 10.0.0.101:80
cd d:\dev\rust\speedtest\
cargo run -r -- test 10.0.0.101:80
cargo add color
cargo add colored
cargo run -r -- test 10.0.0.101:80
cargo publish
cargo uninstall speedtest
cargo install speedtest
speedtest test 10.0.0.101:1234
cargo publish
cd d:\dev\rust\speedtest\
cargo run -r -- server 127.0.0.1:1234
cargo run -r -- serve 127.0.0.1:1234
curl https://sh.rustup.rs
cargo run -r -- serve 127.0.0.1:1234
gpg-agent
gpg-agent 
cargo check
cargo run -r -- serve 127.0.0.1:1234
cargo run -r -- help test
cargo uninstall speedtest
cd ~
cargo install speedtest
speedtest test 10.0.0.101:1234
speedtest test 10.0.0.101:1234 -l 100MB
cargo clippy --fix --allow-dirty
cargo fmt
speedtest test 10.0.0.101:1234 -l 100MB
ping google.com
ping 1.1.1.1
speedtest test 1.1.1.1:80
speedtest test 1.1.1.1:443
speedtest test 10
speedtest test 10.0.0.138:80
speedtest test 10.0.0.101:80
ssh anton@10.0.0.101
cd d:/dev/rust/rust-test
code .
cargo run
code .
cd d:/dev/rust/
git clone https://github.com/Antosser/centralized-messaging-server
cd centralized-messaging-server\
code .
cargo run -r
nc
cargo clippy --fix --allow-dirty
cd d:\dev\rust\centralized-messaging-server\
code .
cd d:\dev\rust\rust-test\
code .
cargo run
cargo run
bhs
cd d:\dev\rust\pi-approximation\
cargo run -r
open src/main.rs
cd ..
cargo new bevy-shader-test
cd bevy-shader-test\
cd .
cd ..
rm bevy-shader-test\ -r
cd bevy-grid\
code .
trunk
sudo
cd d:/dev/rust
cargo new prime-number-calculator
cd prime-number-calculator\
code 
code .
1000000 | cargo run -r | save primes
cls
"1000000" | cargo run -r | save primes
open primes
rm primes
cargo run -r | save primes
open primes
notepad primes
cargo run -r | save primes
rm primes
cargo run -r | save primes
rm primes
cargo run -r | save primes
rm primes
cargo run -r | save primes
rm primes
cargo run -r 1000000000 | save primes
rm primes
cargo run -r 10000000 | save primes
open primes
cargo run -r 10000000
cargo run -r 100000000
cargo run -r 1000000000
rm primes
cargo run -r 1000000000 > primes
rm primes
cargo run -r 1000000000 | save primes
rm primes
cargo add rayon
cargo run -r
cargo run -r 100
cargo run -r 1000000000
cargo run -r 1000000000 | save primes
open primes
cd d:\dev\rust\prime-number-calculator\
cargo run -r 1000000
open primes
cargo run -r 1000000
open primes
notepad prmies
notepad primes
cargo run -r 1000000000
code primes
cargo run -r 10000000000
timeit cargo run -r 10000000000
cargo run -r 100
cl
cloc
loc
which nu
ls C:\Users\Anton\.cargo\bin
cargo install loc
loc primes
cargo run -r 1000
sudo
gpg-agent 
gpg-agent
gpg-agent --help
gpg-agent --daemon
gpg-agent
gpg-agent --help
gpg-agent --da
randompass | clip
cargo uninstall http-server
cd d:\dev\rust\http-server\
git pull
cargo install --path .
cd d:/dev/rust
rm centralized-messaging-server\ -r
cargo new centralized-messaging-server
cd centralized-messaging-server\
code .
cd ..
rm centralized-messaging-server\ -r
cargo generate https://github.com/dreamsofcode-io/grpcalculator-rs
cd centralized-messaging-server\
code .
cargo build
wsl
echo $nu
explorer .
explorer C:\Users\Anton\AppData\Roaming\nushell
